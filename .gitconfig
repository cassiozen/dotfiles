[core]
  excludesfile = ~/.gitignore
  autocrlf = input
[alias]
  # Basic shortcuts
  ci = commit
  co = checkout
  st = status --short --branch
  sw = switch
  # Log visualization
  lol = log --oneline --decorate
  graph = log --oneline --graph --decorate
  # List commands - Git has inconsistent ways to list things,
  # these aliases provide a consistent 'noun' interface:
  branches = branch -a
  tags = tag
  stashes = stash list
  remotes = remote -v
  # Stacked branches utilities
  # https://andrewlock.net/pushing-a-whole-stack-of-branches-with-a-single-git-command/
  default-branch = "!git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@'"
  merge-base-origin ="!f() { git merge-base ${1-HEAD} origin/$(git default-branch); };f "
  stack = "!f() { \
    BRANCH=${1-HEAD}; \
    MERGE_BASE=$(git merge-base-origin $BRANCH); \
    git log --decorate-refs=refs/heads --simplify-by-decoration --pretty=format:\"%(decorate:prefix=,suffix=,tag=,separator=%n)\" $MERGE_BASE..$BRANCH; \
  };f "
  push-stack = "!f() { \
    BRANCH=${1-HEAD}; \
    git stack $BRANCH | xargs -I {} git push --force-with-lease origin {}; \
  };f "
[push]
  # Auto-create remote tracking branches
  autoSetupRemote = true
[diff]
  # Better diff
  # https://blog.gitbutler.com/how-git-core-devs-configure-git/#better-diff
  algorithm = histogram
  colorMoved = plain
  mnemonicPrefix = true
  renames = true
[fetch]
  # Auto-cleanup remote references
  prune = true
  pruneTags = true
[help]
  # Suggest corrections for typos
  autocorrect = prompt
[rebase]
  # Automate rebase workflows:
  # stash changes before rebase, update dependent branches
  autostash = true
  updateRefs = true
[rerere]
  # Reuse Recorded Resolutions: 
  # Remembers how you resolved conflicts and automatically applies 
  # the same fix when identical conflicts occur again in future merges/rebases
  enabled = true
  autoupdate = true
[init]
  defaultBranch = main
[include]
  # Machine-specific overrides
  path = ~/.gitconfig.local